version: 2.1

executors:
  amd64:
    machine:
      image: ubuntu-2204:2024.05.1
    resource_class: medium
  arm64:
    machine:
      image: ubuntu-2204:2024.05.1
    resource_class: arm.medium
    
jobs:
  repl:
    parameters:
      exec:
        type: executor
    executor: << parameters.exec >>
    steps:
      - run:
          name: Spin up Clojure container that starts a REPL server
          command: |
            docker run --detach clojure:lein lein repl :start
      # sleep to wait for the container to be ready
      - run: sleep 20
      - run:
          name: Save this container as another image
          command: |
            docker commit $(docker ps -aq | head -1) kelvintaywl-cci/clojure
      - run:
          name: Spin up a mock REPL server in background
          background: true
          # NOTE: this is in place of the port-forwarded frontend pod, mentioned in https://circleci.com/docs/server/v4.3/operator/troubleshooting-and-support/#air-gap-repl
          # I simply spin up and expose a REPL server on port 6005.
          command: |
           docker run -p 6005:6005 clojure:latest lein repl :headless :host 0.0.0.0 :port 6005
      - run: sleep 20
      - run:
          name: test REPL connection
          command: |
            INET_ADDR="$(ip -4 route get 192.0.2.1 | grep -o 'src [0-9.]\{1,\}' | awk '{ print $2 }')"          
            docker run --rm kelvintaywl-cci/clojure lein repl :connect "${INET_ADDR}":6005 \<<EOD
            exit
            EOD

workflows:
  airgapped-mock:
    jobs:
      - repl:
          matrix:
            parameters:
              exec:
                - arm64
                - amd64
